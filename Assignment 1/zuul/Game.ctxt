#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ \ This\ class\ is\ the\ main\ class\ of\ the\ "World\ of\ Zuul"\ application.\ \r\n\ \ "World\ of\ Zuul"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\ \ Users\ \r\n\ \ can\ walk\ around\ some\ scenery.\ That's\ all.\ It\ should\ really\ be\ extended\ \r\n\ \ to\ make\ it\ more\ interesting\!\r\n\ \r\n\ \ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ \ method.\r\n\ \r\n\ \ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ \ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ \ It\ also\ evaluates\ and\r\n\ \ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ \ Michael\ Kolling\ and\ David\ J.\ Barnes\ \r\n\ @version\ 2006.03.30\r\n\ \r\n\ @author\ Lynn\ Marshall\ and\ Damon\ Ricci\r\n\ @version\ A2\ Submission\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map,\ as\ well\r\n\ as\ the\ previous\ room\ (none)\ and\ previous\ room\ stack\ (empty).\r\n
comment10.params=command
comment10.target=void\ eat(Command)
comment10.text=\r\n\ "Eat"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ want\ to\ eat.\r\n\r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment11.params=command
comment11.target=void\ back(Command)
comment11.text=\ \r\n\ "Back"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment12.params=command
comment12.target=void\ stackBack(Command)
comment12.text=\ \r\n\ "StackBack"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ want\ to\ stackBack.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment13.params=command
comment13.target=void\ takeItem(Command)
comment13.text=\r\n\ "Take"\ was\ entered.\ Attempt\ to\ take\ an\ item\ from\ the\ current\ room.\r\n\ If\ the\ player\ is\ already\ carrying\ an\ item\ or\ the\ item\ is\ not\ in\ the\ room,\r\n\ display\ an\ appropriate\ message.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment14.params=command
comment14.target=void\ dropItem(Command)
comment14.text=\r\n\ "Drop"\ was\ entered.\ Attempt\ to\ drop\ the\ item\ the\ player\ is\ carrying.\r\n\ If\ the\ player\ is\ not\ carrying\ anything,\ display\ an\ appropriate\ message.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment15.params=command
comment15.target=void\ chargeBeamer(Command)
comment16.params=command
comment16.target=void\ fireBeamer(Command)
comment17.params=
comment17.target=void\ printInventory()
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\r\n
comment4.params=
comment4.target=void\ printWelcome()
comment4.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n
comment5.params=command
comment5.target=boolean\ processCommand(Command)
comment5.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ a\ cryptic\ message\ and\ a\ list\ of\ the\ \r\n\ command\ words.\r\n
comment7.params=command
comment7.target=void\ goRoom(Command)
comment7.text=\ \r\n\ Try\ to\ go\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ If\ we\ go\ to\ a\ new\ room,\ update\ previous\ room\ and\ previous\ room\ stack.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
comment8.params=command
comment8.target=boolean\ quit(Command)
comment8.text=\ \r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise\r\n
comment9.params=command
comment9.target=void\ look(Command)
comment9.text=\ \r\n\ "Look"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ want\ to\ look.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed\r\n
numComments=18
